name: Build Image

# Trigger the workflow on push or pull request
on:
  push:
    paths:
      - 'build.bash'
      - 'build-image/openhabian-installer.service'
  pull_request:
    paths:
      - 'build.bash'
      - 'build-image/openhabian-installer.service'
  workflow_dispatch:
    inputs:
      comments:
        description: 'Build comments'
        default: 'Build for testing purposes' 

jobs:
  build32:
    # Using latest Ubuntu (not the GitHub Actions default) to get latest tool versions in GitHub Actions environment
    runs-on: ubuntu-20.04

    steps:
       - name: Checkout repository
         uses: actions/checkout@v2
         with:
           repository: ${{ github.event.pull_request.head.repo.full_name }}
           ref: ${{ github.event.pull_request.head.ref }}
       - name: Environment variables
         run: sudo -E bash -c set
       - name: Install required packages
         run: sudo apt-get install git curl unzip libarchive-zip-perl dos2unix xz-utils kpartx
       - name: getimagename
         id: getimagename
         run: |
           echo "::set-output name=image::$(basename "$(curl "https://downloads.raspberrypi.org/raspios_lite_armhf_latest" -s -L -I  -o /dev/null -w '%{url_effective}')")"
       - name: Cache Raspberry Pi OS image
         uses: actions/cache@v2
         with:
           path: ${{ steps.getimagename.outputs.image }}
           key: ${{ steps.getimagename.outputs.image }}
       - name: Run build.bash rpi
         run: |
           sudo -E ./ci-setup.bash github pi-raspios32
           sudo -E ./build.bash rpi
       - name: getfilename
         id: getfilename
         run: echo "::set-output name=file::$(ls openhabian-*.img.xz)"
       - name: Archive
         uses: actions/upload-artifact@v2
         with:
           name: ${{ steps.getfilename.outputs.file }}
           path: ${{ steps.getfilename.outputs.file }}
  build64experimental:
    # Using latest Ubuntu (not the GitHub Actions default) to get latest tool versions in GitHub Actions environment
    runs-on: ubuntu-20.04

    steps:
       - name: Checkout repository
         uses: actions/checkout@v2
         with:
           repository: ${{ github.event.pull_request.head.repo.full_name }}
           ref: ${{ github.event.pull_request.head.ref }}
       - name: Environment variables
         run: sudo -E bash -c set
       - name: Install required packages
         run: sudo apt-get install git curl unzip libarchive-zip-perl dos2unix xz-utils kpartx
       - name: getimagename
         id: getimagename
         run: |
           echo "::set-output name=image::$(basename "$(curl "https://downloads.raspberrypi.org/raspios_arm64_latest" -s -L -I  -o /dev/null -w '%{url_effective}')")"
       - name: Cache Raspberry Pi OS image
         uses: actions/cache@v2
         with:
           path: ${{ steps.getimagename.outputs.image }}
           key: ${{ steps.getimagename.outputs.image }}
       - name: Run build.bash rpi64
         run: |
           sudo -E ./ci-setup.bash github pi-raspios64beta
           sudo -E ./build.bash rpi64
       - name: getfilename
         id: getfilename
         run: echo "::set-output name=file::$(ls openhabian-*.img.xz)"
       - name: Archive
         uses: actions/upload-artifact@v2
         with:
           name: ${{ steps.getfilename.outputs.file }}
           path: ${{ steps.getfilename.outputs.file }}
