language: bash

dist: disco

matrix:
  fast_finish: true

cache: false

addons:
  apt:
    packages:
    - shellcheck
    - virt-what
    update: true

services:
  - docker

install:
  - shellcheck --version
  - sudo apt-get install virt-what && VIRT=$(sudo virt-what) && echo "Travis VM running on ${VIRT:-native HW}."
  - docker run --rm --privileged multiarch/qemu-user-static:register --reset
  - docker build -t openhabian/rpi-openhabian -f Dockerfile.openhabian .

jobs:
  include:
          #    - stage: Dev-tests
          #      script: docker run -it openhabian/rpi-openhabian bash -c 'bats -r -f "dev-." .'
          #    - stage: Bats-unit-tests
          #      script: docker run -it openhabian/rpi-openhabian bash -c 'bats -r -f "unit-." .'
    - stage: Openhabian-Setup
      script:
        - docker run --name "openhabian-test" --privileged -d openhabian/rpi-openhabian
        - docker exec -it "openhabian-test" bash -c \
            'VIRT=$(sudo virt-what); echo -n "Testing openhabian install on ${VIRT} ..."; ./build.bash local-test && mv ~/.profile ~/.bash_profile && /etc/rc.local; OUTPUT=$?; if [ "${VIRT}" != "native HW" ]; then echo "Did not test openhabian install on native HW, ignoring test result."; exit 0; fi'
        - docker commit "openhabian-test" openhabian-installed
    - stage: Bats
      script: docker run -it openhabian/rpi-openhabian bash -c 'bats -r -f "unit-." .'
    - script:
        - docker run --name "bats-tests" --privileged -d openhabian/rpi-openhabian
        - travis_wait 60 sleep infinity & docker exec -it "bats-tests" bash -c 'bats -r -f "installation-." .'
        - travis_wait 60 sleep infinity & docker exec -it "bats-tests" bash -c 'bats -r -f "destructive-." .'
    - stage: Shellcheck
      script: shellcheck -x -s bash openhabian-setup.sh || true
    - script: shellcheck -x -s bash functions/*.bash || true
    - script: shellcheck -x -s bash build-image/*.bash || true
